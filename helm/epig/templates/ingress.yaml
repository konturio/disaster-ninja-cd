{{ if .Values.createResource.ingress }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ENV_NAME }}-epig
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: epig
    app.kubernetes.io/instance: {{ .Values.ENV_NAME }}-epig
    #don't add app.kubernetes.io/version
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.ENV_NAME }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    cert-manager.io/cluster-issuer: letsencrypt-production #use letsencrypt-staging for testing
    acme.cert-manager.io/http01-edit-in-place: "true" #required otherwise ACME challenge can't be completed
    {{ if .Values.isOfflineInstallation }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    {{ end }}
spec:
  tls:
    - hosts:
      - {{ .Values.ingressHost }}
      secretName: {{ .Values.ENV_NAME }}-epig-tls
  ingressClassName: nginx
  rules:
    - host: {{ .Values.ingressHost }}
      http:
        paths:
          - path: /active/preview.png
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.ENV_NAME }}-preview-generator
                port:
                  number: {{ .Values.PORT }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ENV_NAME }}-epig-ng
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: epig-ng
    app.kubernetes.io/instance: {{ .Values.ENV_NAME }}-epig
    #don't add app.kubernetes.io/version
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.ENV_NAME }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    cert-manager.io/cluster-issuer: letsencrypt-production #use letsencrypt-staging for testing
    acme.cert-manager.io/http01-edit-in-place: "true" #required otherwise ACME challenge can't be completed
    nginx.ingress.kubernetes.io/server-snippet: |
      proxy_bind off;
    {{ if .Values.isOfflineInstallation }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    {{ end }}
spec:
  tls:
    - hosts:
      - {{ .Values.ingressHost }}
      secretName: {{ .Values.ENV_NAME }}-epig-tls
  ingressClassName: {{ .Values.ingressClass }}
  rules:
    - host: {{ .Values.ingressHost }}
      http:
        paths:
          - path: /active/preview.png
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.ENV_NAME }}-preview-generator
                port:
                  number: {{ .Values.PORT }}
{{ end }}
