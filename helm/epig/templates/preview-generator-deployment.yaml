apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.ENV_NAME }}-preview-generator
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: preview-generator
    app.kubernetes.io/instance: {{ .Values.ENV_NAME }}-preview-generator
    #don't add app.kubernetes.io/version
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.ENV_NAME }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: preview-generator
      app.kubernetes.io/instance: {{ .Values.ENV_NAME }}-preview-generator
      #don't add app.kubernetes.io/version
      app.kubernetes.io/managed-by: "Helm"
      stage: {{ .Values.ENV_NAME }}
  replicas: {{ .Values.containers.preview_generator.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: preview-generator
        app.kubernetes.io/instance: {{ .Values.ENV_NAME }}-preview-generator
        #don't add app.kubernetes.io/version
        app.kubernetes.io/managed-by: "Helm"
        stage: {{ .Values.ENV_NAME }}
      annotations:
        meta.helm.sh/release-name: {{ .Release.Name }}
        meta.helm.sh/release-namespace: {{ .Release.Namespace }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }} #only roll pods if config (rendered!) changed
    spec:
      {{ if .Values.containers.usePullSecret }}
      imagePullSecrets: #TODO remove once image is on ghcr.io
        - name: {{ .Values.containers.pullSecretName }}{{ end }}
      containers:
      - name: preview-generator
        image: {{ .Values.containers.preview_generator.repository }}:{{ .Values.containers.preview_generator.tag }}
        imagePullPolicy: {{ .Values.containers.preview_generator.pullPolicy }}
        envFrom:
          - configMapRef:
              name: {{ .Values.ENV_NAME }}-epig
          - secretRef:
              name: {{ .Values.ENV_NAME }}-preview-generator-secret
        ports:
          - containerPort: {{ .Values.PORT }}
        resources:
          requests:
            cpu: {{ .Values.resources.preview_generator.requests.cpu | quote }}
            memory: {{ .Values.resources.preview_generator.requests.memory | quote }}
          limits:
            cpu: {{ .Values.resources.preview_generator.limits.cpu | quote }}
            memory: {{ .Values.resources.preview_generator.limits.memory | quote }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.PORT }}
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          timeoutSeconds: 10
          failureThreshold: 10
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.PORT }}
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          timeoutSeconds: 10
          periodSeconds: 15
          failureThreshold: 1
        securityContext:
          readOnlyRootFilesystem: true
      restartPolicy: Always
