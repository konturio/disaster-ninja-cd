apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.envName }}-event-api
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: event-api
    app.kubernetes.io/instance: {{ .Values.envName }}-event-api
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.envName }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
data:
  spring.redis.host: '{{ .Values.envName }}-event-api-redis'
  {{ if not .Values.usePgDataSecret }}
  SPRING_DATASOURCE_URL: 'jdbc:postgresql://{{ .Values.databaseHost }}:{{ .Values.databasePort }}/{{ .Values.databaseName }}'
  SPRING_DATASOURCE_USERNAME: {{ .Values.databaseUser }}
  {{ end }}
  #do not use uppercase var names for hikari properties otherwise startup fails with smth like 'The configuration of the pool is sealed once started.'
  spring.datasource.hikari.maximum-pool-size: {{ .Values.databaseMaximumPoolSize | squote }}
  spring.security.oauth2.resourceserver.jwt.issuer-uri: {{ .Values.jwtIssuerUri }}
  spring.security.oauth2.resourceserver.jwt.jwk-set-uri: {{ .Values.jwtJwkSetUri }}
  spring.profiles.active: {{ .Values.profiles }}
  spring.liquibase.enabled: '{{ .Values.liquibaseEnabled }}'
  OTEL_TRACES_EXPORTER: {{ .Values.otlpTracesExporter }}
  OTEL_METRICS_EXPORTER: none
  OTEL_LOGS_EXPORTER: none
  server.servlet.context-path: /events
  management.endpoints.web.base-path: /
  management.endpoints.web.path-mapping.prometheus: metrics
  management.server.port: {{ .Values.management.port | quote }}
  konturApi.host: {{ .Values.konturApiUrl }}
  konturApps.host: {{ .Values.konturAppsUrl }}
  pdc.host: {{ .Values.pdcUrl }}
  pdc.mapSrvHost: {{ .Values.pdcMapSrvUrl }}
  pdc.user: {{ .Values.pdcUser }}
  emdat.user: {{ .Values.emdatUser }}
  staticdata.s3Folder: {{ .Values.staticdataS3Folder }}
  humanitarianCrisis.s3Folder: {{ .Values.humanitarianCrisisS3Folder }}
  aws.sqs.url: {{ .Values.awsSqsUrl }}
  aws.sqs.dlqUrl: {{ .Values.awsSqsDlqUrl }}
  aws.sqs.enabled: '{{ .Values.awsSqsEnabled }}'
  feign.client.config.default.defaultRequestHeaders.User-Agent: {{ .Values.feignUserAgent }}
  scheduler.hpSrvImport.enable: '{{ .Values.hpSrvImportEnable }}'
  scheduler.hpSrvMagsImport.enable: '{{ .Values.hpSrvMagsImportEnable }}'
  scheduler.pdcMapSrvSearch.enable: '{{ .Values.pdcMapSrvSearchEnable }}'
  scheduler.gdacsImport.enable: '{{ .Values.gdacsImportEnable }}'
  scheduler.firmsModisImport.enable: '{{ .Values.firmsModisImportEnable }}'
  scheduler.firmsNoaaImport.enable: '{{ .Values.firmsNoaaImportEnable }}'
  scheduler.firmsSuomiImport.enable: '{{ .Values.firmsSuomiImportEnable }}'
  scheduler.emDatImport.enable: '{{ .Values.emDatImportEnable }}'
  scheduler.staticImport.enable: '{{ .Values.staticImportEnable }}'
  scheduler.stormsNoaaImport.enable: '{{ .Values.stormsNoaaImportEnable }}'
  scheduler.tornadoJapanMaImport.enabled: '{{ .Values.tornadoJapanMaImportEnabled }}'
  scheduler.historicalTornadoJapanMaImport.enabled: '{{ .Values.historicalTornadoJapanMaImportEnabled }}'
  scheduler.calfireSearch.enable: '{{ .Values.calfireSearchEnable }}'
  scheduler.nifcImport.enable: '{{ .Values.nifcImportEnable }}'
  scheduler.inciwebImport.enable: '{{ .Values.inciwebImportEnable }}'
  scheduler.humanitarianCrisisImport.enable: '{{ .Values.humanitarianCrisisImportEnable }}'
  scheduler.nhcAtImport.enable: '{{ .Values.nhcAtImportEnable }}'
  scheduler.nhcCpImport.enable: '{{ .Values.nhcCpImportEnable }}'
  scheduler.nhcEpImport.enable: '{{ .Values.nhcEpImportEnable }}'
  scheduler.normalization.enable: '{{ .Values.normalizationEnable }}'
  scheduler.eventCombination.enable: '{{ .Values.eventCombinationEnable }}'
  scheduler.feedComposition.enable: '{{ .Values.feedCompositionEnable }}'
  scheduler.enrichment.enable: '{{ .Values.enrichmentEnable }}'
  scheduler.reEnrichment.enable: '{{ .Values.reEnrichmentEnable }}'
  scheduler.metrics.enable: '{{ .Values.metricsEnable }}'
