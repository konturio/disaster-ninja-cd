apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.envName }}-keycloak
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: {{ .Values.envName }}-keycloak
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.envName }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
data:
  DB_ADDR: {{ .Values.keycloak.databaseHost }}
  DB_PORT: {{ .Values.keycloak.databasePort | quote }}
  DB_DATABASE: {{ .Values.keycloak.databaseName }}
  DB_USER: {{ .Values.keycloak.databaseUser }}
  DB_VENDOR: postgres
  KC_DB: postgres
  KC_DB_URL: jdbc:postgresql://{{ .Values.keycloak.databaseHost }}:{{ .Values.keycloak.databasePort }}/{{ .Values.keycloak.databaseName }}
  KC_DB_USERNAME: {{ .Values.keycloak.databaseUser }}
  #JAVA_OPTS
  #JAVA_OPTS_APPEND
  #JDBC_PARAMS
  #JGROUPS_DISCOVERY_PROTOCOL
  #JDBC_PING
  KC_HOSTNAME_URL: https://{{ .Values.ingressHost }}
  KC_HOSTNAME_ADMIN_URL: https://{{ .Values.ingressHost }}
  KC_HOSTNAME_STRICT: "false"
  KC_HOSTNAME_STRICT_HTTPS: "false"
  KC_HTTP_ENABLED: "true"
  KEYCLOAK_FRONTEND_URL: {{ .Values.service.kcFrontEndUrl }}
  KEYCLOAK_USER: keycloak #is only created if not exists, password is set in secret.yaml in KEYCLOAK_PASSWORD
  PROXY_ADDRESS_FORWARDING: "true"
  USP_DB_ADDR: {{ .Values.ups.databaseHost }}
  USP_DB_NAME: {{ .Values.ups.databaseName }}
  USP_DB_PORT: {{ .Values.ups.databasePort | quote }}
  USP_DB_USER: {{ .Values.ups.databaseUser }}
  KEYCLOAK_STATISTICS: all #enables /metrics and /health on management port
  {{ if .Values.disableSsl }}
  auth.server.ssl.required: "false"
  app.server.ssl.required: "false"
  {{ end }}
  {{ if .Values.createResource.importDefaultRealm }}
  KEYCLOAK_IMPORT: /usr/import/{{ .Values.envName }}-realm.json
  {{ end }}
---
{{ if .Values.createResource.importDefaultRealm }} #realm is only imported if not exists
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.envName }}-import-keycloak
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: import-keycloak
    app.kubernetes.io/instance: {{ .Values.envName }}-import-keycloak
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.envName }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
data:
  import-cfgmap-data: |
    {{ printf "%s%s%s" "values/import/" .Values.envName "-realm.json" | .Files.Get | indent 4 | trim }}
{{ end }}