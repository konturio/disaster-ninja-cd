{{ if .Values.createResource.ingress }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true" #required otherwise ACME challenge can't be completed
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    cert-manager.io/cluster-issuer: letsencrypt-production #use letsencrypt-staging for testing
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
  {{- if .Values.isOfflineInstallation }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
  {{- else }}
    nginx.ingress.kubernetes.io/server-snippet: |
      proxy_bind off;

      more_set_headers "Cache-Control: $layers_tiles_cache_control";

      location ~* "^/tiles/metrics" {
          deny all;
          return 403;
      }


      location /tiles/ {

          proxy_cache api01;
          proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
          proxy_cache_background_update on;
          proxy_cache_revalidate on;
          proxy_cache_valid 60s;
          proxy_cache_lock on;

          proxy_pass http://{{ .Values.envName }}-layers-tiles-api.{{ .Release.Namespace }}.svc.cluster.local:8629;

          add_header X-Cache-Status $upstream_cache_status;

          add_header access-control-allow-headers "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,User-Language";
          add_header access-control-allow-methods "GET, PUT, POST, DELETE, PATCH, OPTIONS";
          add_header access-control-allow-origin "*";
          add_header access-control-max-age 1728000;
      }


    {{- if or (eq .Values.k8s_cluster_flavor "k8s-01.kontur.io") (eq .Values.k8s_cluster_flavor "k8s-02.kontur.io") }}
      set $cors_config_file '/etc/nginx/default.cors.json';
    nginx.ingress.kubernetes.io/configuration-snippet: |
      include /etc/nginx/CORS_02_location.inc.conf;
      proxy_set_header Origin ""; # Disable CORS processing by upstreams
    {{- end }}
  {{- end }}
  labels:
    app.kubernetes.io/instance: {{ .Values.envName }}-layers-tiles-api
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: layers-tiles-api-ng
    stage: {{ .Values.envName }}
  name: {{ .Values.envName }}-layers-tiles-api-ng
  namespace: {{ .Release.Namespace }}
spec:
  ingressClassName: {{ .Values.ingressClass }}
  rules:
  - host: {{ .Values.ingressHost }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Values.envName }}-layers-tiles-api
            port:
              name: lrs-tiles-api
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - {{ .Values.ingressHost }}
    secretName: {{ .Values.envName }}-layers-tiles-api-tls # < cert-manager will store the created certificate in this secret.
{{ end }}
