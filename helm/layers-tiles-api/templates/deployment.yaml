apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Values.envName }}-layers-tiles-api
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: layers-tiles-api
    stage: {{ .Values.envName }}
  name: {{ .Values.envName }}-layers-tiles-api
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Values.envName }}-layers-tiles-api
      #don't add app.kubernetes.io/version
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: layers-tiles-api
      stage: {{ .Values.envName }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        meta.helm.sh/release-name: {{ .Release.Name }}
        meta.helm.sh/release-namespace: {{ .Release.Namespace }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }} #only roll pods if config (rendered!) changed
      labels:
        app.kubernetes.io/instance: {{ .Values.envName }}-layers-tiles-api
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: layers-tiles-api
        stage: {{ .Values.envName }}
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: {{ .Values.envName }}-layers-tiles-api
        - secretRef:
            name: {{ .Values.envName }}-layers-tiles-api
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /tiles/metrics
            port: {{ .Values.HttpPort }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: layers-tiles-api
        ports:
          - containerPort: {{ .Values.HttpPort }}
            name: lrs-tiles-api
            protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /tiles/metrics
            port: {{ .Values.HttpPort }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu | quote }}
            memory: {{ .Values.resources.requests.memory }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
