apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Values.envName }}-layers-db-etl
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: layers-db-etl
    stage: {{ .Values.envName }}
  name: {{ .Values.envName }}-layers-db-etl
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Values.envName }}-layers-db-etl
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: layers-db-etl
      stage: {{ .Values.envName }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        meta.helm.sh/release-name: {{ .Release.Name }}
        meta.helm.sh/release-namespace: {{ .Release.Namespace }}
        #only roll pods if config (rendered!) changed
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/instance: {{ .Values.envName }}-layers-db-etl
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: layers-db-etl
        stage: {{ .Values.envName }}
    spec:
      {{- if .Values.image.usePullSecret }}
      imagePullSecrets: #TODO remove once image is on ghcr.io
        - name: {{ .Values.image.pullSecretName }}
      {{- end }}
      containers:
        - envFrom:
            - configMapRef:
                name: {{ .Values.envName }}-layers-db-etl
            - secretRef:
                name: {{ .Values.envName }}-layers-db-etl
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent

          {{- if .Values.createResource.deploymentLivenessProbe }}
          # TODO livenessProbe
          {{- end }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - cat start.sh
            failureThreshold: 1
            initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: layers-db-etl
          ports:
            - containerPort: {{ .Values.port }}
              name: main
              protocol: TCP
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu | quote }}
              memory: {{ .Values.resources.requests.memory | quote }}
            limits:
              memory: {{ .Values.resources.limits.memory | quote }}
